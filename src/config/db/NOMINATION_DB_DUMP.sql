--
-- NOMINATION V2.5.2
--
DROP DATABASE IF EXISTS EC_NOMINATION;

CREATE DATABASE IF NOT EXISTS EC_NOMINATION CHARACTER SET UTF8MB4 COLLATE UTF8MB4_UNICODE_CI;

USE EC_NOMINATION;




--
-- ELECTION MODULES
-- mainly regarding to maintain the configs
--

-- election_module file to maintain election types
CREATE TABLE IF NOT EXISTS ELECTION_MODULE(
    ID VARCHAR(36) PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL, /* eg: 'parliamentary', 'provincial' */
    DIVISION_COMMON_NAME VARCHAR(20) /* eg: 'district', 'province' */
)ENGINE=INNODB;

-- manage approval status of election module
CREATE TABLE IF NOT EXISTS ELECTION_MODULE_APPROVAL(
	ID VARCHAR(36) PRIMARY KEY,
	STATUS ENUM('PENDING','APPROVED','REJECTED'),
	CREATED_DATE BIGINT,
	CREATED_BY VARCHAR(50),
	
	MODULE_ID VARCHAR(36),
    FOREIGN KEY(MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

-- defines all configs required
CREATE TABLE IF NOT EXISTS ELECTION_CONFIG(
    ID VARCHAR(36) PRIMARY KEY,
    DESCRIPTION VARCHAR(50)
)ENGINE=INNODB;

-- keep values for defined configs
CREATE TABLE IF NOT EXISTS ELECTION_CONFIG_DATA(
	VALUE VARCHAR(100) NOT NULL,
	
	ELECTION_CONFIG_ID VARCHAR(36),
	FOREIGN KEY(ELECTION_CONFIG_ID) REFERENCES ELECTION_CONFIG(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	MODULE_ID VARCHAR(36),
	FOREIGN KEY(MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	PRIMARY KEY(ELECTION_CONFIG_ID, MODULE_ID)
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS DIVISION(
	ID VARCHAR(36) PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL,
	CODE VARCHAR(10) NOT NULL,
	NO_OF_CANDIDATES INT(5) NOT NULL,
	
	MODULE_ID VARCHAR(36),
    FOREIGN KEY(MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

-- where you store all eligibity criteria of nominations
CREATE TABLE IF NOT EXISTS ELIGIBILITY_CONFIG(
    ID VARCHAR(36) PRIMARY KEY,
    DESCRIPTION TEXT NOT NULL,
    
    MODULE_ID VARCHAR(36),
    FOREIGN KEY(MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS SUPPORT_DOC_CONFIG(
	ID VARCHAR(36) PRIMARY KEY,
	KEY_NAME VARCHAR(50) NOT NULL, /* eg: 'NIC', 'Birth Certificate' */
	DESCRIPTION VARCHAR(100),
	DOC_CATEGORY ENUM('NOMINATION', 'CANDIDATE', 'OBJECTION')
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS SUPPORT_DOC_CONFIG_DATA(
	SELECT_FLAG BOOLEAN,
	
	SUPPORT_DOC_CONFIG_ID VARCHAR(36),
	FOREIGN KEY (SUPPORT_DOC_CONFIG_ID) REFERENCES SUPPORT_DOC_CONFIG(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	MODULE_ID VARCHAR(36),
    FOREIGN KEY(MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
    
    PRIMARY KEY(SUPPORT_DOC_CONFIG_ID, MODULE_ID)
)ENGINE=INNODB;




--
-- ELECTION 
--

CREATE TABLE IF NOT EXISTS ELECTION(
    ID VARCHAR(36) PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    
    MODULE_ID VARCHAR(36),
    FOREIGN KEY(MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ELECTION_TIMELINE_CONFIG(
	ID VARCHAR(36) PRIMARY KEY,
	KEY_NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100)
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ELECTION_TIMELINE_CONFIG_DATA(
	ELECTION_TIMELINE_CONFIG_ID VARCHAR(36),
	FOREIGN KEY (ELECTION_TIMELINE_CONFIG_ID) REFERENCES ELECTION_TIMELINE_CONFIG(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	ELECTION_ID VARCHAR(36),
	FOREIGN KEY(ELECTION_ID) REFERENCES ELECTION(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	VALUE BIGINT,
	PRIMARY KEY(ELECTION_TIMELINE_CONFIG_ID, ELECTION_ID)
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ELECTION_APPROVAL(
	ID VARCHAR(36) PRIMARY KEY,
	STATUS ENUM('PENDING','APPROVED','REJECTED'),
	CREATED_DATE BIGINT,
	CREATED_BY VARCHAR(50),
	
	ELECTION_ID VARCHAR(36),
	FOREIGN KEY(ELECTION_ID) REFERENCES ELECTION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ELECTION_DIVISION(
	ID VARCHAR(36) PRIMARY KEY,
	
	ELECTION_ID VARCHAR(36),
	FOREIGN KEY(ELECTION_ID) REFERENCES ELECTION(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	DIVISION_ID VARCHAR(36),
	FOREIGN KEY (DIVISION_ID) REFERENCES DIVISION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ELECTION_TEAM(
	ID VARCHAR(36) PRIMARY KEY,
	
	TEAM_ID VARCHAR(36),
	
	ELECTION_ID VARCHAR(36),
	FOREIGN KEY(ELECTION_ID) REFERENCES ELECTION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;







--
-- NOMINATION 
--

CREATE TABLE IF NOT EXISTS NOMINATION(
    ID VARCHAR(36) PRIMARY KEY,
    STATUS ENUM('DRAFT','APPROVE','REJECT','SUBMIT'),
    
    TEAM_ID VARCHAR(36),
    
    ELECTION_ID VARCHAR(36) NOT NULL,
    FOREIGN KEY (ELECTION_ID) REFERENCES ELECTION(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
    
    ELECTION_DIVISION_ID VARCHAR(36),
    FOREIGN KEY (ELECTION_DIVISION_ID) REFERENCES ELECTION_DIVISION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
    
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS NOMINATION_SUPPORT_DOC(
    ID VARCHAR(36) PRIMARY KEY,
	FILE_PATH VARCHAR(200),
	
	SUPPORT_DOC_CONFIG_DATA_ID VARCHAR(36),
	FOREIGN KEY (SUPPORT_DOC_CONFIG_DATA_ID) REFERENCES SUPPORT_DOC_CONFIG_DATA(SUPPORT_DOC_CONFIG_ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	NOMINATION_ID VARCHAR(36),
    FOREIGN KEY (NOMINATION_ID) REFERENCES NOMINATION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS NOMINATION_APPROVAL(
	ID VARCHAR(36) PRIMARY KEY,	
	APPROVAL_DATE BIGINT,
	APPROVAL_BY VARCHAR(100),
	STATUS ENUM('APPROVED','REJECTED'),
	REVIEW_NOTE TEXT,
	
	NOMINATION_ID VARCHAR(36),
    FOREIGN KEY (NOMINATION_ID) REFERENCES NOMINATION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

-- nomination allowed roles like 'RPP', 'IG'
CREATE TABLE IF NOT EXISTS NOMINATION_ALLOWED_ROLE(
    ID VARCHAR(36) PRIMARY KEY,
    -- NAME: 'RPP', 'IG'
    NAME VARCHAR(200) NOT NULL,
    SELECT_FLAG BOOLEAN DEFAULT FALSE,
    
    MODULE_ID VARCHAR(36),
    FOREIGN KEY(MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS OBJECTION(
    ID VARCHAR(36) PRIMARY KEY,
    DESCRIPTION TEXT,
    CREATE_DATE BIGINT,
    CREATED_BY VARCHAR(100),
    
    NOMINATION_ID VARCHAR(36),
    FOREIGN KEY (NOMINATION_ID) REFERENCES NOMINATION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS OBJECTION_REVIEW(
	ID VARCHAR(36) PRIMARY KEY,
	CREATE_BY VARCHAR(100), /* plans is store use logged user id */
	CREATE_BY_TEAM_ID VARCHAR(36),
	CREATE_DATE BIGINT,
	NOTE TEXT,
	
	OBJECTION_ID VARCHAR(36),
    FOREIGN KEY (OBJECTION_ID) REFERENCES OBJECTION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS OBJECTION_SUPPORT_DOC(
    ID VARCHAR(36) PRIMARY KEY,
    FILE_PATH VARCHAR(300),
    
    SUPPORT_DOC_CONFIG_DATA_ID VARCHAR(36),
	FOREIGN KEY (SUPPORT_DOC_CONFIG_DATA_ID) REFERENCES SUPPORT_DOC_CONFIG_DATA(SUPPORT_DOC_CONFIG_ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	
	MODULE_ID VARCHAR(36),
    FOREIGN KEY (MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
    
    OBJECTION_ID VARCHAR(36),
    FOREIGN KEY (OBJECTION_ID) REFERENCES OBJECTION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

-- payment for nomination
CREATE TABLE IF NOT EXISTS PAYMENT(
    ID VARCHAR(36) PRIMARY KEY,
    DEPOSITOR VARCHAR(100),
    DEPOSIT_DATE BIGINT,
    AMOUNT DECIMAL(13,4),
    FILE_PATH VARCHAR(300),
    STATUS ENUM('PENDING','APPROVED','REJECTED'),
    
    NOMINATION_ID VARCHAR(36),
    FOREIGN KEY (NOMINATION_ID) REFERENCES NOMINATION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;






-- 
-- CANDIDATE 
--

CREATE TABLE IF NOT EXISTS CANDIDATE(
    ID VARCHAR(36) PRIMARY KEY,
    FULL_NAME VARCHAR(200),
    PREFERRED_NAME VARCHAR(50),
    NIC VARCHAR(15),
    DATE_OF_BIRTH BIGINT,
    GENDER VARCHAR(5),
    ADDRESS VARCHAR(300),
    OCCUPATION VARCHAR(20),
    ELECTORAL_DIVISION_NAME VARCHAR(50),
    ELECTORAL_DIVISION_CODE VARCHAR(10),
    COUNSIL_NAME VARCHAR(20),
    
    NOMINATION_ID VARCHAR(36),
    FOREIGN KEY(NOMINATION_ID) REFERENCES NOMINATION(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS CANDIDATE_CONFIG(
    ID VARCHAR(36) PRIMARY KEY,
    FULL_NAME BOOLEAN,
    PREFERRED_NAME BOOLEAN,
    NIC BOOLEAN,
    DATE_OF_BIRTH BOOLEAN,
    GENDER BOOLEAN,
    ADDRESS BOOLEAN,
    OCCUPATION BOOLEAN,
    ELECTORAL_DIVISION_NAME BOOLEAN,
    ELECTORAL_DIVISION_CODE BOOLEAN,
    COUNSIL_NAME BOOLEAN,
    
    MODULE_ID VARCHAR(36),
    FOREIGN KEY (MODULE_ID) REFERENCES ELECTION_MODULE(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS CANDIDATE_SUPPORT_DOC(
    ID VARCHAR(36) PRIMARY KEY,
	FILE_PATH VARCHAR(200),
	
	SUPPORT_DOC_CONFIG_DATA_ID VARCHAR(36),
	FOREIGN KEY (SUPPORT_DOC_CONFIG_DATA_ID) REFERENCES SUPPORT_DOC_CONFIG_DATA(SUPPORT_DOC_CONFIG_ID) ON UPDATE CASCADE ON DELETE RESTRICT,
    
    CANDIDATE_ID VARCHAR(36),
    FOREIGN KEY(CANDIDATE_ID) REFERENCES CANDIDATE(ID) ON UPDATE CASCADE ON DELETE RESTRICT
)ENGINE=INNODB;







--
-- Table structure fsor table `USER`
--

DROP TABLE IF EXISTS `USER`;

CREATE TABLE `USER` (
  `ID` VARCHAR(36) NOT NULL,
  `NAME` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`ID`)
)ENGINE=INNODB;

INSERT INTO USER VALUES ('123', 'CLEMENT');




--
-- EC-NOMINATION DATA DUMP FOR V2.5.3
--

-- USE EC_NOMINATION;

INSERT INTO ELECTION_MODULE 
	(ID, NAME, DIVISION_COMMON_NAME) 
VALUES 
('455cd89e-269b-4b69-96ce-8d7c7bf44ac2', 'parliamentary', 'DISTRICT'),
('7404a229-6274-43d0-b3c5-740c3c2e1256', 'presidential', 'ALL');


INSERT INTO ELECTION 
	(ID, NAME, MODULE_ID) 
VALUES 
-- parliamentary
('43680f3e-97ac-4257-b27a-5f3b452da2e6', 'Parliamentary Election 2019', '455cd89e-269b-4b69-96ce-8d7c7bf44ac2'),

-- presidentail
('9b85a650-709e-4cdc-83e1-ba4a2ad97cbc', 'Presidentail Election 2020', '7404a229-6274-43d0-b3c5-740c3c2e1256');

INSERT INTO ELECTION_TIMELINE_CONFIG 
	(ID, KEY_NAME, DESCRIPTION)
VALUES 
('0f62755e-9784-4046-9804-8d4deed36f2a', 'nomination_start_date', 'Start date of Nomination in UNIX TIMESTAMP'),
('c06a789c-405c-4e7a-8df2-66766284589b','nomination_end_date', 'End date of Nomination in UNIX TIMESTAMP'),
('675ec08b-2937-4222-94a6-0143a94763f1', 'objection_start_date', 'Start date of Objection in UNIX TIMESTAMP'),
('64ae3e95-591a-4bf9-8a5b-10803e0eca82','objection_end_date', 'End date of Objection in UNIX TIMESTAMP');

INSERT INTO ELECTION_TIMELINE_CONFIG_DATA 
	(ELECTION_TIMELINE_CONFIG_ID, ELECTION_ID, VALUE)
VALUES
-- parliamentary '43680f3e-97ac-4257-b27a-5f3b452da2e6'
('0f62755e-9784-4046-9804-8d4deed36f2a', '43680f3e-97ac-4257-b27a-5f3b452da2e6', 1546713528),
('c06a789c-405c-4e7a-8df2-66766284589b', '43680f3e-97ac-4257-b27a-5f3b452da2e6', 1548873528),
('675ec08b-2937-4222-94a6-0143a94763f1', '43680f3e-97ac-4257-b27a-5f3b452da2e6', 1549046328),
('64ae3e95-591a-4bf9-8a5b-10803e0eca82', '43680f3e-97ac-4257-b27a-5f3b452da2e6', 1550255928),

-- presidential '9b85a650-709e-4cdc-83e1-ba4a2ad97cbc'
('0f62755e-9784-4046-9804-8d4deed36f2a', '9b85a650-709e-4cdc-83e1-ba4a2ad97cbc', 1581791928),
('c06a789c-405c-4e7a-8df2-66766284589b', '9b85a650-709e-4cdc-83e1-ba4a2ad97cbc', 1585593528),
('675ec08b-2937-4222-94a6-0143a94763f1', '9b85a650-709e-4cdc-83e1-ba4a2ad97cbc', 1585766328),
('64ae3e95-591a-4bf9-8a5b-10803e0eca82', '9b85a650-709e-4cdc-83e1-ba4a2ad97cbc', 1586975928);


